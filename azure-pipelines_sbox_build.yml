trigger:
  branches:
    include:
      - master  

pool:
  vmImage: 'ubuntu-latest' 

variables:
  DATABRICKS_HOST_WORKSPACE_MAIN00: 'https://adb-3635282203417052.12.azuredatabricks.net'
  DATABRICKS_TOKEN_WORKSPACE_MAIN00: $(DATABRICKS_TOKEN_WORKSPACE_MAIN00)

  DATABRICKS_HOST_WORKSPACE_MAIN02: 'https://adb-1879076228317698.18.azuredatabricks.net'
  DATABRICKS_TOKEN_WORKSPACE_MAIN02: $(DATABRICKS_TOKEN_WORKSPACE_MAIN02)

steps:
- task: UsePythonVersion@0
  displayName: 'Use Python 3.x'
  inputs:
    versionSpec: '3.x'

- script: |
    python -m pip install --upgrade pip
    pip install databricks-cli
  displayName: 'Install Databricks CLI'

# Configure and deploy to Workspace MAIN00
- script: |
    echo "[DEFAULT]" > $(HOME)/.databrickscfg
    echo "host = $(DATABRICKS_HOST_WORKSPACE_MAIN00)" >> $(HOME)/.databrickscfg
    echo "token = $(DATABRICKS_TOKEN_WORKSPACE_MAIN00)" >> $(HOME)/.databrickscfg
  displayName: 'Configure Databricks CLI for Workspace MAIN00'

- script: |
    databricks workspace delete /live --recursive 
    databricks workspace import_dir Databricks /live --overwrite
  displayName: 'Publish Databricks folder to /live in Databricks MAIN00 Workspace'

# Configure and deploy to Workspace MAIN02
- script: |
    echo "[DEFAULT]" > $(HOME)/.databrickscfg
    echo "host = $(DATABRICKS_HOST_WORKSPACE_MAIN02)" >> $(HOME)/.databrickscfg
    echo "token = $(DATABRICKS_TOKEN_WORKSPACE_MAIN02)" >> $(HOME)/.databrickscfg
  displayName: 'Configure Databricks CLI for Workspace MAIN02'

- script: |
    databricks workspace delete /live --recursive
    databricks workspace import_dir Databricks /live --overwrite
  displayName: 'Publish Databricks folder to /live in Databricks MAIN02 Workspace'
